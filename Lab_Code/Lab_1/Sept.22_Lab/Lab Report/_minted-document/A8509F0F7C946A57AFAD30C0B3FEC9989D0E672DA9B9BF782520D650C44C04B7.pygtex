\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{InfixCalculation}\PYG{p}{(}\PYG{k+kt}{char}\PYG{+w}{ }\PYG{n}{InfixExpression}\PYG{p}{[],}\PYG{+w}{ }\PYG{n}{stack}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{OPND}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{char\PYGZus{}stack}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{OPTR}\PYG{p}{)\PYGZob{}}
\PYG{+w}{	}\PYG{n}{CharStackPush}\PYG{p}{(}\PYG{n}{OPTR}\PYG{p}{,}\PYG{+w}{ }\PYG{l+s+sc}{\PYGZsq{}=\PYGZsq{}}\PYG{p}{);}\PYG{c+c1}{//先往OPTR栈中压入一个\PYGZsh{}}
\PYG{+w}{	}\PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//扫描中缀表达式的各个字符}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{IsOperand}\PYG{p}{(}\PYG{n}{InfixExpression}\PYG{p}{[}\PYG{n}{i}\PYG{p}{])}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{TRUE}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//如果扫描到操作数}
\PYG{+w}{			}\PYG{k+kt}{double}\PYG{+w}{ }\PYG{n}{num}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{Digitizer}\PYG{p}{(}\PYG{n}{InfixExpression}\PYG{p}{);}\PYG{c+c1}{//Digitizer是将字符转换为数字的函数}
\PYG{+w}{			}\PYG{n}{StackPush}\PYG{p}{(}\PYG{n}{OPND}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{num}\PYG{p}{);}\PYG{c+c1}{//将该操作数入栈}
\PYG{+w}{			}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}当前操作符栈为：\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{			}\PYG{n}{CharStackPrint}\PYG{p}{(}\PYG{n}{OPTR}\PYG{p}{);}
\PYG{+w}{			}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}当前操作数栈为：\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{			}\PYG{n}{StackPrint}\PYG{p}{(}\PYG{n}{OPND}\PYG{p}{);}
\PYG{+w}{			}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{k}{else}\PYG{+w}{ }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{IsOperator}\PYG{p}{(}\PYG{n}{InfixExpression}\PYG{p}{[}\PYG{n}{i}\PYG{p}{])}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{n}{TRUE}\PYG{p}{)\PYGZob{}}\PYG{c+c1}{//如果扫描到操作符}
\PYG{+w}{			}\PYG{n}{JudgePriority}\PYG{p}{(}\PYG{n}{InfixExpression}\PYG{p}{[}\PYG{n}{i}\PYG{p}{],}\PYG{n}{OPND}\PYG{p}{,}\PYG{n}{OPTR}\PYG{p}{);}
\PYG{+w}{			}\PYG{c+c1}{//JudgePriority是用于判断当前操作符和栈顶操作符优先级的函数}
\PYG{+w}{		}\PYG{p}{\PYGZcb{}}
\PYG{+w}{		}\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{OPTR}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{data}\PYG{p}{[}\PYG{n}{OPTR}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{top}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s+sc}{\PYGZsq{}=\PYGZsq{}}\PYG{+w}{ }\PYG{o}{\PYGZam{}\PYGZam{}}\PYG{+w}{ }\PYG{n}{InfixExpression}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{==}\PYG{+w}{ }\PYG{l+s+sc}{\PYGZsq{}=\PYGZsq{}}\PYG{p}{)}\PYG{+w}{ }\PYG{k}{break}\PYG{p}{;}\PYG{c+c1}{//终止循环的条件}
\PYG{+w}{		}\PYG{n}{i}\PYG{o}{++}\PYG{p}{;}\PYG{c+c1}{//移动到下一个字符的位置}
\PYG{+w}{	}\PYG{p}{\PYGZcb{}}
\PYG{+w}{	}\PYG{n}{std}\PYG{o}{::}\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{OPND}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{data}\PYG{p}{[}\PYG{n}{OPND}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{top}\PYG{p}{];}\PYG{c+c1}{//栈顶元素即为中缀表达式的计算值}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}

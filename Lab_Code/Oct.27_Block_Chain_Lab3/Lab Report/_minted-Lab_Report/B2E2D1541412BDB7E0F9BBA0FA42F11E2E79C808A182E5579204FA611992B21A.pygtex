\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{+w}{  }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n+nf}{main}\PYG{p}{()\PYGZob{}}
\PYG{+w}{      }\PYG{n}{block}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{serverBlock}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{InitServerBlock}\PYG{p}{();}
\PYG{+w}{      }\PYG{n}{block}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{tail}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{serverBlock}\PYG{p}{;}
\PYG{+w}{      }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{blockMessageNumber}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{;}\PYG{c+c1}{//计数，统计一共发送过几次区块消息，从而给区块消息文件命名}
\PYG{+w}{      }\PYG{k}{while}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
\PYG{+w}{          }\PYG{n}{clientMessageQueue}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{getTxtFileNames}\PYG{p}{(}\PYG{n}{folderPath1}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{processedFiles1}\PYG{p}{);}
\PYG{+w}{          }\PYG{n}{blockMessageQueue}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{getTxtFileNames}\PYG{p}{(}\PYG{n}{folderPath2}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{processedFiles2}\PYG{p}{);}
\PYG{+w}{          }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{isWinner}\PYG{p}{())\PYGZob{}}\PYG{c+c1}{//中奖几率在0.01\PYGZhy{}0.1之间}
\PYG{+w}{              }\PYG{c+cm}{/*从“交易池”中取出n (\PYGZgt{}=1)个交易，组成一个区块newBLK。}
\PYG{c+cm}{              newBLK的prevHash等于本节点区块链表最后一个区块lastBLK的hash值。}
\PYG{c+cm}{              newBLK的hash值可以采用一个随机函数来生成；}
\PYG{c+cm}{              height值为lastBLK的height+1； merkleRoot和nonce都为空。}
\PYG{c+cm}{              newBLK中的交易集合由上述n个交易构成。}
\PYG{c+cm}{              将newBLK插入本节点的区块链表末尾。}
\PYG{c+cm}{              将newBLK以某个格式（比如JSON）组成字符串“发送”给另一个区块链节点的“区块消息队列”。}
\PYG{c+cm}{              */}
\PYG{+w}{              }\PYG{n}{block}\PYG{o}{*}\PYG{+w}{ }\PYG{n}{newBLK}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{createBlock}\PYG{p}{(}\PYG{n}{tail}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{);}
\PYG{+w}{              }\PYG{n}{tail}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{newBLK}\PYG{p}{;}
\PYG{+w}{              }\PYG{n}{tail}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{newBLK}\PYG{p}{;}
\PYG{+w}{              }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Jackpot! A new block has been inserted to the chain!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{              }\PYG{n}{sendBlockMessage}\PYG{p}{(}\PYG{n}{blockMessageNumber}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{newBLK}\PYG{p}{);}
\PYG{+w}{          }\PYG{p}{\PYGZcb{}}
\PYG{+w}{          }\PYG{k}{else}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//没有中奖}
\PYG{+w}{              }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{blockMessageQueue}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())\PYGZob{}}\PYG{+w}{ }\PYG{c+c1}{//“区块消息队列”不为空}
\PYG{+w}{                  }\PYG{c+c1}{//从“区块消息队列”头部取出一个消息（内容为区块）}
\PYG{+w}{                  }\PYG{c+c1}{//判断该区块是否与已有区块冲突（即是否存在一个区块，与新区块的preHash相同。）}
\PYG{+w}{                  }\PYG{n}{string}\PYG{+w}{ }\PYG{n}{firstBlockMSG}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{blockMessageQueue}\PYG{p}{.}\PYG{n}{front}\PYG{p}{();}\PYG{c+c1}{//从“区块消息队列”头部取出一个消息（内容为区块）}
\PYG{+w}{                  }\PYG{n}{blockMessageQueue}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{();}
\PYG{+w}{                  }\PYG{n}{processedFiles2}\PYG{p}{[}\PYG{n}{firstBlockMSG}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{;}\PYG{c+c1}{//将此区块消息标记为被处理过}
\PYG{+w}{                  }\PYG{n}{string}\PYG{+w}{ }\PYG{n}{filePath\PYGZus{}BMSG}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}block\PYGZus{}chain\PYGZus{}server1/blockMessage/\PYGZdq{}}\PYG{o}{+}\PYG{n}{firstBlockMSG}\PYG{p}{;}
\PYG{+w}{                  }\PYG{n}{block}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{firstBLK}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{recoverBlock}\PYG{p}{(}\PYG{n}{filePath\PYGZus{}BMSG}\PYG{p}{);}\PYG{c+c1}{//将该消息恢复成一个区块firstBLK}

\PYG{+w}{                  }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{judgeConflictBlock}\PYG{p}{(}\PYG{n}{firstBLK}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{serverBlock}\PYG{p}{))\PYGZob{}}\PYG{c+c1}{//\PYGZdq{}冲突\PYGZdq{}则丢弃该区块}
\PYG{+w}{                      }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Conflict! The block has been discarded!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                  }\PYG{k}{else}\PYG{p}{\PYGZob{}}
\PYG{+w}{                  }\PYG{c+c1}{//将该区块插入到本节点区块链表末尾；}
\PYG{+w}{                      }\PYG{n}{firstBLK}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{tail}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{p}{;}
\PYG{+w}{                      }\PYG{n}{tail}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{next}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{firstBLK}\PYG{p}{;}
\PYG{+w}{                      }\PYG{n}{tail}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{firstBLK}\PYG{p}{;}
\PYG{+w}{                      }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}The block has been inserted to the chain!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                  }\PYG{c+c1}{//从“交易池”中删除该区块中包含的交易；}
\PYG{+w}{                      }\PYG{k+kt}{int}\PYG{+w}{ }\PYG{n}{eraseNum}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{+w}{                      }\PYG{k}{while}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{firstBLK}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{transactions}\PYG{p}{[}\PYG{n}{eraseNum}\PYG{p}{].}\PYG{n}{txid}\PYG{+w}{ }\PYG{o}{!=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{)\PYGZob{}}
\PYG{+w}{                          }\PYG{n}{transactionPool}\PYG{p}{.}\PYG{n}{erase}\PYG{p}{(}\PYG{n}{firstBLK}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{transactions}\PYG{p}{[}\PYG{n}{eraseNum}\PYG{p}{].}\PYG{n}{txid}\PYG{p}{);}
\PYG{+w}{                          }\PYG{n}{eraseNum}\PYG{o}{++}\PYG{p}{;}
\PYG{+w}{                      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                      }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Correspondent transactions deleted in the transaction pool!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{              }\PYG{p}{\PYGZcb{}}\PYG{c+c1}{//区块消息队列不为空}
\PYG{+w}{              }\PYG{k}{else}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//“区块消息队列”为空，从“客户消息队列”头部取出一个消息MSG；}
\PYG{+w}{                  }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{clientMessageQueue}\PYG{p}{.}\PYG{n}{empty}\PYG{p}{())\PYGZob{}}
\PYG{+w}{                      }\PYG{n}{string}\PYG{+w}{ }\PYG{n}{firstClientMSG}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{clientMessageQueue}\PYG{p}{.}\PYG{n}{front}\PYG{p}{();}\PYG{c+c1}{//从“客户消息队列”头部取出一个消息MSG；}
\PYG{+w}{                      }\PYG{n}{string}\PYG{+w}{ }\PYG{n}{filePath\PYGZus{}CMSG}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}/Users/gongshukai/Desktop/SCHOOL WORK/SOPHOMORE SEM1/DATA STRUCTURE  \PYGZam{} ALGORITHM /SLIDES \PYGZam{} HOMEWORK \PYGZam{} LAB/LAB/Oct.27\PYGZus{}Lab/block\PYGZus{}chain\PYGZus{}server1/clientMessage/\PYGZdq{}}\PYG{o}{+}\PYG{n}{firstClientMSG}\PYG{p}{;}
\PYG{+w}{                      }\PYG{n}{clientMessageQueue}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{();}
\PYG{+w}{                      }\PYG{n}{processedFiles1}\PYG{p}{[}\PYG{n}{firstClientMSG}\PYG{p}{]}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n+nb}{true}\PYG{p}{;}\PYG{c+c1}{//将此客户消息标记为被处理过}
\PYG{+w}{                      }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{n}{judge\PYGZus{}ClientMSG}\PYG{p}{(}\PYG{n}{filePath\PYGZus{}CMSG}\PYG{p}{))\PYGZob{}}\PYG{c+c1}{//MSG 是交易}
\PYG{+w}{                          }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Client\PYGZsq{}s transaction request!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                          }\PYG{n}{transaction}\PYG{+w}{ }\PYG{n}{tsc}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{recover\PYGZus{}tsc}\PYG{p}{(}\PYG{n}{filePath\PYGZus{}CMSG}\PYG{p}{);}
\PYG{+w}{                          }\PYG{k}{if}\PYG{+w}{ }\PYG{p}{(}\PYG{o}{!}\PYG{n}{find\PYGZus{}tsc\PYGZus{}in\PYGZus{}tscPool}\PYG{p}{(}\PYG{n}{tsc}\PYG{p}{))\PYGZob{}}\PYG{c+c1}{//“交易池”不包含该交易，将该交易加入“交易池”；}
\PYG{+w}{                              }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}transaction added to the transaction pool!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                              }\PYG{n}{transactionPool}\PYG{p}{.}\PYG{n}{insert}\PYG{p}{(}\PYG{n}{pair}\PYG{o}{\PYGZlt{}}\PYG{n}{string}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{transaction}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{n}{tsc}\PYG{p}{.}\PYG{n}{txid}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{tsc}\PYG{p}{));}\PYG{c+c1}{//加入交易池}
\PYG{+w}{                          }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                          }\PYG{k}{else}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//丢弃该交易}
\PYG{+w}{                              }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}The transaction has been discarded!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                          }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                      }\PYG{k}{else}\PYG{p}{\PYGZob{}}\PYG{c+c1}{//MSG 是查询}
\PYG{+w}{                          }\PYG{c+c1}{//在本节点维护的区块链表中执行查询；}
\PYG{+w}{                          }\PYG{c+c1}{//将查询结果输出在屏幕上；}
\PYG{+w}{                          }\PYG{n}{cout}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}Client\PYGZsq{}s inquiry request!\PYGZdq{}}\PYG{+w}{ }\PYG{o}{\PYGZlt{}\PYGZlt{}}\PYG{+w}{ }\PYG{n}{endl}\PYG{p}{;}
\PYG{+w}{                          }\PYG{n}{inquiryServerBlock}\PYG{p}{(}\PYG{n}{serverBlock}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{filePath\PYGZus{}CMSG}\PYG{p}{);}
\PYG{+w}{                      }\PYG{p}{\PYGZcb{}}
\PYG{+w}{                  }\PYG{p}{\PYGZcb{}}
\PYG{+w}{              }\PYG{p}{\PYGZcb{}}\PYG{c+c1}{//区块消息队列为空，客户消息队列不为空}
\PYG{+w}{          }\PYG{p}{\PYGZcb{}}\PYG{c+c1}{//中奖or没有中奖}
\PYG{+w}{          }\PYG{n}{this\PYGZus{}thread}\PYG{o}{::}\PYG{n}{sleep\PYGZus{}for}\PYG{p}{(}\PYG{n}{chrono}\PYG{o}{::}\PYG{n}{seconds}\PYG{p}{(}\PYG{l+m+mi}{5}\PYG{p}{));}\PYG{c+c1}{//隔一会儿再执行下一趟循环，避免server过载}
\PYG{+w}{      }\PYG{p}{\PYGZcb{}}\PYG{c+c1}{//while(1)}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\end{Verbatim}

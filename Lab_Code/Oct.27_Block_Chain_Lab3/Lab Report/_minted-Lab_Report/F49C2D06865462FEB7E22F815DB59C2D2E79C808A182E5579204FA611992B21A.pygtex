\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{+w}{  }\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n+nf}{OP\PYGZus{}HASH160}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{script}\PYG{p}{)\PYGZob{}}
\PYG{+w}{      }\PYG{c+c1}{//弹出栈顶的数，调用std::hash计算，并将结果压入栈中}
\PYG{+w}{      }\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{calc}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{SmartContract}\PYG{p}{.}\PYG{n}{top}\PYG{p}{();}\PYG{c+c1}{//取栈顶元素}
\PYG{+w}{      }\PYG{n}{SmartContract}\PYG{p}{.}\PYG{n}{pop}\PYG{p}{();}
\PYG{+w}{      }\PYG{n}{std}\PYG{o}{::}\PYG{n}{hash}\PYG{+w}{ }\PYG{o}{\PYGZlt{}}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{o}{\PYGZgt{}}\PYG{+w}{ }\PYG{n}{h}\PYG{p}{;}\PYG{c+c1}{//调用哈希函数}
\PYG{+w}{      }\PYG{n}{SmartContract}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{h}\PYG{p}{(}\PYG{n}{calc}\PYG{p}{)));}\PYG{c+c1}{//计算calc的哈希值，并压入栈}
\PYG{+w}{      }\PYG{c+cm}{/*观察到OP\PYGZus{}HASH160后面总会再跟一个验证串(例如: OP\PYGZus{}HASH160 17730432883776450158)}
\PYG{c+cm}{      把这个串也顺便压进栈内，从而便于后续计算(OP\PYGZus{}EQUALVERIFY)*/}
\PYG{+w}{      }\PYG{c+c1}{//先找到OP\PYGZus{}HASH160后面空格的位置}
\PYG{+w}{      }\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{substr}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}OP\PYGZus{}HASH160\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{      }\PYG{k+kt}{size\PYGZus{}t}\PYG{+w}{ }\PYG{n}{pos}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{script}\PYG{p}{.}\PYG{n}{find}\PYG{p}{(}\PYG{n}{substr}\PYG{p}{);}
\PYG{+w}{      }\PYG{k+kt}{size\PYGZus{}t}\PYG{+w}{ }\PYG{n}{startPos}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{pos}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{n}{substr}\PYG{p}{.}\PYG{n}{length}\PYG{p}{();}\PYG{c+c1}{//OP\PYGZus{}HASH160后第一个空格的位置}
\PYG{+w}{      }\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{substr2}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+s}{\PYGZdq{}OP\PYGZus{}EQUALVERIFY\PYGZdq{}}\PYG{p}{;}
\PYG{+w}{      }\PYG{k+kt}{size\PYGZus{}t}\PYG{+w}{ }\PYG{n}{endPos}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{script}\PYG{p}{.}\PYG{n}{find}\PYG{p}{(}\PYG{n}{substr2}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{startPos}\PYG{p}{);}
\PYG{+w}{      }\PYG{n}{std}\PYG{o}{::}\PYG{n}{string}\PYG{+w}{ }\PYG{n}{VerifyStr}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{script}\PYG{p}{.}\PYG{n}{substr}\PYG{p}{(}\PYG{n}{startPos}\PYG{+w}{ }\PYG{o}{+}\PYG{+w}{ }\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{endPos}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{n}{startPos}\PYG{+w}{ }\PYG{o}{\PYGZhy{}}\PYG{+w}{ }\PYG{l+m+mi}{2}\PYG{p}{);}
\PYG{+w}{      }\PYG{n}{SmartContract}\PYG{p}{.}\PYG{n}{push}\PYG{p}{(}\PYG{n}{VerifyStr}\PYG{p}{);}
\PYG{+w}{  }\PYG{p}{\PYGZcb{}}
\end{Verbatim}
